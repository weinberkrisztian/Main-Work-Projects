{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/cart-item.ts","webpack:///src/app/common/product.ts","webpack:///src/app/components/cart-details/cart-details.component.ts","webpack:///src/app/components/cart-details/cart-details.component.html","webpack:///src/app/components/cart-status/cart-status.component.ts","webpack:///src/app/components/cart-status/cart-status.component.html","webpack:///src/app/components/checkout/checkout.component.ts","webpack:///src/app/components/checkout/checkout.component.html","webpack:///src/app/components/product-detail-list/product-detail-list.component.ts","webpack:///src/app/components/product-detail-list/product-detail-list.component.html","webpack:///src/app/components/product-list-menu/product-list-menu.component.ts","webpack:///src/app/components/product-list-menu/product-list-menu.component.html","webpack:///src/app/components/product-list/product-list.component.ts","webpack:///src/app/components/product-list/product-list-grid.component.html","webpack:///src/app/components/search-list/search-list.component.ts","webpack:///src/app/components/search-list/search-list.component.html","webpack:///src/app/service/cart.service.ts","webpack:///src/app/service/checkout.service.ts","webpack:///src/app/service/product-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","CartItem","product","name","unitPrice","imageUrl","quantity","Product","CartDetailsComponent","cartService","cartItems","totalPrice","totalQuantity","listCartDetails","CartItems","subscribe","data","computeCartTotalts","cartItem","addToCart","decrementQuantity","remove","CartStatusComponent","updateCartStatus","CheckoutComponent","formBuilder","checkoutService","expirationYearList","expirationMonthList","currentYear","Date","getFullYear","startMonth","getMonth","countriesBilling","statesBilling","statesShipping","checkoutFormGroup","group","customer","firstName","lastName","email","shippingAddress","country","street","city","state","zipCode","billingAddress","creditCard","type","number","secCode","expirationMonth","expirationYear","showPriceAndQuantityStatus","console","log","getStatesByCountryCode","event","target","checked","controls","setValue","value","reset","creditCardFormGroup","get","selectedYear","Number","getMonthsForCreditCard","getYearForCreditCard","getCountryList","onSubmit","setStatesShipping","copyShippingToBilling","setStatesBilling","choosingExpirationYear","ProductDetailListComponent","productService","route","paramMap","getProductById","theId","snapshot","getProductByIdService","ProductListMenuComponent","listOfProductListCategories","getProducCategoryList","JSON","stringify","productCategory","ProductListComponent","products","curretnCategoryId","previousCategoryId","searchMode","thePageNumber","thePageSize","theTotalElements","maxSize","boundaryLinks","thePreviousKeyword","listProducts","has","listProductsBySearch","listProductsByCategory","theKeyword","getSearchProduct","processResultWithPagination","hasId","curretnCategoryName","getProductListPaginate","_embedded","page","size","totalElements","tempProduct","theCartItem","updatePageSize","SearchListComponent","router","navigateByUrl","searchForProduct","CartService","alreadyExist","existingCartItem","undefined","length","find","tempCartItem","push","totalPriceValue","totalQuantityValue","currentItem","next","logCartData","tempItem","subTotal","toFixed","theCartIndex","findIndex","splice","providedIn","CheckoutService","httpClient","baseurlForCountries","baseurlForstates","urlForStatesFindByCountryCode","pipe","response","states","countries","theMonth","startYear","endYear","theYear","ProductServiceService","categorySearchUrl","baseurl","thePage","currentCategoryId","searchUrl","searchedUrl","detailedUrl","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ecommerce';\n}\n","<div class=\"page-wrapper\">\n\n    <!-- MENU SIDEBAR-->\n    <aside class=\"menu-sidebar d-none d-lg-block\">\n        <div class=\"logo\">\n            <a routerLink=\"/products\">\n                <img src=\"assets/images/logo.png\" alt=\"luv2shop\" class=\"img-responsive\">\n            </a>\n        </div>\n       \n        <app-product-list-menu></app-product-list-menu>\n    </aside>\n    <!-- END MENU SIDEBAR-->\n    \n    \t<!-- PAGE CONTAINER-->\n\t\t<div class=\"page-container\">\n\t\t\t<!-- HEADER DESKTOP-->\n\t\t\t<header class=\"header-desktop\">\n\t\t\t\t<div class=\"section-content section-content-p30\">\n\t\t\t\t\t<div class=\"container-fluid\">\n\t\t\t\t\t\t<div class=\"header-wrap\">\n                            <app-search-list></app-search-list>\n                            \n                            <app-cart-status></app-cart-status>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"account-wrap\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n            <!-- END HEADER DESKTOP-->\n                <!-- MAIN CONTENT-->\n                <router-outlet></router-outlet>\n\n       <!--        <app-product-list></app-product-list> --> \n\n              \n\n\t\t</div>\n    </div>\n\n    <footer>\n        <ul>\n            <li><a href=\"#\">About Us</a></li>\n            <li><a href=\"#\">Contact Us</a></li>\n            <li><a href=\"#\">Help</a></li>\n        </ul>\n    </footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport{HttpClientModule} from '@angular/common/http';\nimport { ProductServiceService } from './service/product-service.service';\nimport { Routes,RouterModule } from '@angular/router';\nimport { ProductListMenuComponent } from './components/product-list-menu/product-list-menu.component';\nimport{SearchListComponent} from './components/search-list/search-list.component';\nimport { ProductDetailListComponent } from './components/product-detail-list/product-detail-list.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// declaring the routes and also importing them(RouterModule)\nconst routes: Routes=[\n{path:'checkout', component: CheckoutComponent},  \n{path:'cart-details', component: CartDetailsComponent},  \n{path:'products/:id', component: ProductDetailListComponent},\n{path:'search/:keyword', component: ProductListComponent} , \n{path:'category/:id/:name' , component:  ProductListComponent},\n{path:'category' , component:  ProductListComponent},\n{path:'products' , component:  ProductListComponent},\n{path:'' , redirectTo:'/products', pathMatch:'full'},\n{path:'**' , redirectTo:'/products', pathMatch:'full'}\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductListMenuComponent,\n    SearchListComponent,\n    ProductDetailListComponent,\n    CartStatusComponent,\n    CartDetailsComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [ProductServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Product } from './product';\n\nexport class CartItem {\n\n    id: string;\n    name:string;\n    unitPrice:number;\n    imageUrl:string;\n    \n    quantity:number;\n\n    constructor(product:Product){\n        this.id=product.id;\n        this.name=product.name;\n        this.unitPrice=product.unitPrice;\n        this.imageUrl=product.imageUrl;\n\n        this.quantity=1;\n    }\n}\n","export class Product {\n    id:string;\n    sku: string;\n    name: string;\n    description: string;\n    unitPrice: number;\n    imageUrl: string;\n    active: boolean;\n    unitsInStock: number;\n    dateCreated: Date;\n    lastUpdated: Date;\n  \n   \n \n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/service/cart.service';\nimport { CartItem } from 'src/app/common/cart-item';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css']\n})\nexport class CartDetailsComponent implements OnInit {\n\n  cartItems: CartItem[]=[] ;\n  totalPrice: number=0;\n  totalQuantity: number=0;\n\n  constructor(private cartService:CartService) { }\n\n  ngOnInit(): void {\n    this.listCartDetails();\n\n  }\n\n\n  listCartDetails() {\n    this.cartItems=this.cartService.CartItems;\n\n    this.cartService.totalPrice.subscribe(\n      data=>\n        this.totalPrice=data\n    );\n\n    this.cartService.totalQuantity.subscribe(\n      data=>\n      this.totalQuantity=data\n    );\n\n    this.cartService.computeCartTotalts();\n\n  }\n\n  incrementQuantity(cartItem : CartItem) {\n    this.cartService.addToCart(cartItem);\n  }\n\n\n  decrementQuantity(cartItem : CartItem){\n    this.cartService.decrementQuantity(cartItem);\n\n  }\n  remove(cartItem: CartItem) {\n    this.cartService.remove(cartItem);\n\n  }\n\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fliud\">\n            <div *ngIf=\"cartItems.length > 0\" >\n            <table class=\"table table-bordered\" >\n                <tr>\n                    <th width=\"20%\">Product Image</th>\n                    <th width=\"50%\">Product Detail</th>\n                    <th width=\"30%\"></th>\n                </tr>\n                <tr *ngFor=\"let tempCatrItem of cartItems\">\n                    <td>\n                        <img src=\"{{ tempCatrItem.imageUrl}}\" class=\"imagge-responsive\" width=\"150px\" />\n                    </td>\n                    <td>\n                        <p>{{tempCatrItem.name}}</p>\n                        <p>{{tempCatrItem.unitPrice | currency: 'USD'}}</p>\n                    </td>\n                    <td>\n                        <div class=\"items\">\n                         <label>Quantity: </label>\n\n                         <div class=\"row no-gutters\">\n                            <div class=\"col\">\n                                <button (click)=\"incrementQuantity(tempCatrItem)\" class=\"btn btn-primary btn-sm\">\n                                    <i class=\"fas fa-plus\"></i>\n                                </button>\n                            </div>\n                        \n                            <div class=\"col ml-4 mr-2\">\n                            {{tempCatrItem.quantity}}\n                            </div>\n\n                            <div class=\"col\">\n                                <button (click)=\"decrementQuantity(tempCatrItem)\" class=\"btn btn-primary btn-sm\">\n                                    <i class=\"fas fa-minus\"></i>\n                                </button>\n                            </div>\n\n                            <div class=\"col-8\"></div>\n                        </div>\n                        </div>\n                        <br>\n\n                        <div class=\"row no-gutters\">\n                            <div class=\"col\">\n                                <button (click)=\"remove(tempCatrItem)\" class=\"btn btn-primary btn-sm\">\n                                    Remove\n                                </button>\n                            </div>\n                        </div>\n\n                        <p class=\"mt-2\">Subtotal: {{tempCatrItem.quantity * tempCatrItem.unitPrice | currency: 'USD'}}</p>\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\"></td>\n                    <td style=\"font-weight: bold\">\n                    <p>Total Quantity: {{totalQuantity}}</p>\n                    <p>Shipping FREE</p>\n                    <p>Total Price: {{totalPrice | currency:'USD'}}</p>\n                    <a routerLink=\"/checkout\" class=\"btn btn-primary \">Checkout</a>\n                                \n                            \n\n                    </td>    \n\n\n                </tr>\n            </table>\n\n            </div>\n            <!-- if the cart is empty-->\n            <div *ngIf=\"cartItems.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n                Your shopping cart is empty.\n            </div>\n        </div>  \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/service/cart.service';\n\n@Component({\n  selector: 'app-cart-status',\n  templateUrl: './cart-status.component.html',\n  styleUrls: ['./cart-status.component.css']\n})\nexport class CartStatusComponent implements OnInit {\n\ntotalPrice:number=0.00;\ntotalQuantity:number=0;\n\n  constructor(private cartService:CartService) { }\n\n  ngOnInit(): void {\n    this.updateCartStatus();\n\n  }\n  updateCartStatus() {\n    this.cartService.totalPrice.subscribe(\n      data=>{\n        this.totalPrice=data\n      }\n    );\n    this.cartService.totalQuantity.subscribe(\n      data=>{\n        this.totalQuantity=data\n      }\n    );\n  }\n\n}\n","<div class=\"cart-area d-n\">\n    <a routerLink=\"/cart-details\" >\n        <div class=\"total\">{{totalPrice.toFixed(2) | currency:'USD'}} <span> {{totalQuantity}}</span> </div> <i class=\"fa fa-shopping-cart\"\n            aria-hidden=\"true\"></i>\n    </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CartService } from 'src/app/service/cart.service';\nimport { CheckoutService } from 'src/app/service/checkout.service';\nimport { Country } from 'src/app/common/country';\nimport { State } from 'src/app/common/state';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  totalQuantity: number=0;\n  totalPrice: number=0;\n  checkoutFormGroup: FormGroup;\n\n  expirationYearList: number[]=[];\n  expirationMonthList: number[]=[];\n   currentYear: number=new Date().getFullYear();\n    startMonth: number=new Date().getMonth()+1;\n  countriesBilling: Country[]=[];\n  statesBilling: State[]=[];\n\n  statesShipping: State[]=[];\n  constructor(private formBuilder: FormBuilder, private cartService:CartService,\n     private checkoutService: CheckoutService) { }\n\n  ngOnInit(): void {\n\n    \n   \n\n    this.checkoutFormGroup=this.formBuilder.group({\n      customer: this.formBuilder.group({\n        firstName: [''],\n        lastName: [''],\n        email: ['']\n      }),\n      shippingAddress: this.formBuilder.group({\n        country:[''],\n        street:[''],\n        city:[''],\n        state:[''],\n        zipCode:[''],\n      }),\n      billingAddress: this.formBuilder.group({\n        country:[''],\n        street:[''],\n        city:[''],\n        state:[''],\n        zipCode:[''],\n      }),\n      creditCard: this.formBuilder.group({\n        type:[''],\n        name:[''],\n        number:[''],\n        secCode:[''],\n        expirationMonth:[''],\n        expirationYear:['']\n      })\n    });\n\n    this.showPriceAndQuantityStatus();\n\n  }\n\n  setStatesBilling(code: string){\n\n    console.log(\"state:\"+ code);\n    this.checkoutService.getStatesByCountryCode(code).subscribe(\n      data=>{\n        this.statesBilling=data\n      }\n    );\n\n  }\n\n  setStatesShipping(code: string){\n\n    console.log(\"state:\"+ code);\n    this.checkoutService.getStatesByCountryCode(code).subscribe(\n      data=>{\n        this.statesShipping=data\n      }\n    );\n\n  }\n\ncopyShippingToBilling(event){\n  if(event.target.checked){\n    this.statesBilling=this.statesShipping;\n    this.checkoutFormGroup.controls.billingAddress\n    .setValue(this.checkoutFormGroup.controls.shippingAddress.value);\n  }else{\n    this.checkoutFormGroup.controls.billingAddress.reset();\n  }\n  }\n\n  choosingExpirationYear(){\n    const creditCardFormGroup= this.checkoutFormGroup.get('creditCard');\n    const selectedYear: number= Number(creditCardFormGroup.value.expirationYear);\n\n    let startMonth;\n    if(selectedYear===this.currentYear){\n     startMonth=new Date().getMonth()+1;\n    }else{\n     startMonth=1;\n          \n        }\n \n        this.checkoutService.getMonthsForCreditCard(startMonth).subscribe(\n          data=>{\n            this.expirationMonthList=data\n          }\n        );\n\n\n      }\n  \n\nonSubmit(){\n  console.log(this.checkoutFormGroup.get('customer').value);\n  console.log(this.checkoutFormGroup.get('shippingAddress').value);\n  console.log(this.checkoutFormGroup.get('creaditCard').value);\n  \n}\n\nshowPriceAndQuantityStatus() {\n\n\n  this.cartService.totalPrice.subscribe(\n    data=>{\n      this.totalPrice=data\n    }\n  );\n  this.cartService.totalQuantity.subscribe(\n    data=>{\n      this.totalQuantity=data\n    }\n  );\n  this.cartService.computeCartTotalts();\n\n\n  this.checkoutService.getYearForCreditCard().subscribe(\n    data=>{\n      this.expirationYearList=data\n    }\n  );\n\n  this.checkoutService.getMonthsForCreditCard(this.startMonth).subscribe(\n    data=>{\n      this.expirationMonthList=data\n    }\n  );\n\nthis.checkoutService.getCountryList().subscribe(\n  data=>{\n    this.countriesBilling=data\n  }\n);\n\n\n\n\n\n}\n\n\n\n}\n","<div class=\"main-content page-m\">\n    <div class=\"section.content section-content-p30\">\n        <div class=\"container-fluid\">\n            <form [formGroup]=\"checkoutFormGroup\" (ngSubmit)=\"onSubmit()\">\n\n                <div formGroupName=\"customer\" class=\"form-area\">\n                    <h3>Customer</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>First Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"firstName\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Last Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"lastName\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Email</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"email\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n                </div>\n\n\n                <div formGroupName=\"shippingAddress\" class=\"form-area\">\n                    <h3>Shipping Address</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Country</label></div>\n                        <div class=\"col-md-9\">\n                                <div class=\"input-space\">\n                                    <select formControlName=\"country\" #myInputShipping (change)='setStatesShipping(myInputShipping.value)'>\n                                        <option *ngFor='let country of countriesBilling'  [value]=\"country.code\">\n                                            {{country.name}}\n                                        </option>\n                                    </select>\n                                </div>  \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Street</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"street\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>City</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"city\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>State</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"state\">\n                                    <option *ngFor=\"let state of statesShipping\">\n                                        {{state.name}}\n                                    </option>\n                                </select>\n                            </div>    \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Zip Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"zipCode\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n                </div>\n                <!-- checkbox-->\n                <div class=\"input-space\">\n                    <label class=\"au-checkbox\">\n                        <input type=\"checkbox\" (change)=\"copyShippingToBilling($event)\">\n                        <span class=\"au-checkmark\"></span>Billing Address same as Shipping Address\n                    </label>\n                </div>\n\n                                <!--Billing address-->\n                                <div formGroupName=\"billingAddress\" class=\"form-area\">\n                                    <h3>Billing Address</h3>\n                \n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\"><label>Country</label></div>\n                                        <div class=\"col-md-9\">\n                                                <div class=\"input-space\">\n                                                <select formControlName=\"country\" #myInputBilling (change)='setStatesBilling(myInputBilling.value)'>\n                                                    <option *ngFor='let country of countriesBilling'  [value]=\"country.code\">\n                                                        {{country.name}}\n                                                    </option>\n                                                </select>\n                                                </div>  \n                                        </div>\n                                    </div>\n                \n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\"><label>Street</label></div>\n                                        <div class=\"col-md-9\">\n                                            <div class=\"input-space\">\n                                            <input formControlName=\"street\" type=\"text\">\n                                            </div>    \n                                        </div>\n                                    </div>\n                \n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\"><label>City</label></div>\n                                        <div class=\"col-md-9\">\n                                            <div class=\"input-space\">\n                                            <input formControlName=\"city\" type=\"text\">\n                                            </div>    \n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\"><label>State</label></div>\n                                        <div class=\"col-md-9\">\n                                            <div class=\"input-space\">\n                                            <select formControlName=\"state\">\n                                                <option *ngFor=\"let state of statesBilling\">\n                                                    {{state.name}}\n                                                </option>\n                                            </select>\n                                            </div>    \n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\"><label>Zip Code</label></div>\n                                        <div class=\"col-md-9\">\n                                            <div class=\"input-space\">\n                                            <input formControlName=\"zipCode\" type=\"text\">\n                                            </div>    \n                                        </div>\n                                    </div>\n                                </div>\n\n                  <div formGroupName=\"creditCard\" class=\"form-area\">\n                    <h3>Credit Card</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Card Type</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"type\">\n                                    <option>Visa</option>\n                                    <option>MasterCard</option>\n                                </select>\n                             </div>  \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Name on Card</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"name\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Card Number</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"number\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Security Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                            <input formControlName=\"secCode\" type=\"text\">\n                            </div>    \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Expiration Month</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationMonth\">\n                                    <option *ngFor=\"let theMonth of expirationMonthList\">\n                                        {{theMonth}} \n                                        </option>\n                                </select>\n                             </div>   \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"><label>Expiration Year</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationYear\"   (change)='choosingExpirationYear()'>\n                                    <option *ngFor=\"let theYear of expirationYearList\">\n                                        {{theYear}} \n                                        </option>\n                                </select>\n                             </div>     \n                        </div>\n                    </div>\n                </div>\n\n                <!-- Order Details-->\n                <div class=\"form-area\">\n                    <h3>Review Your Order</h3>\n                    <p>Total Quantity: {{totalQuantity}}</p>\n                    <p>Shipping FREE</p>\n                    <p>Total Price: {{totalPrice | currency: 'USD'}}</p>\n\n                </div>    \n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-info\">Purchase</button>\n                </div>\n            </form>\n        </div>        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductServiceService } from 'src/app/service/product-service.service';\nimport { Product } from 'src/app/common/product';\nimport { CartService } from 'src/app/service/cart.service';\nimport { CartItem } from 'src/app/common/cart-item';\n\n\n@Component({\n  selector: 'app-product-detail-list',\n  templateUrl: './product-detail-list.component.html',\n  styleUrls: ['./product-detail-list.component.css']\n})\nexport class ProductDetailListComponent implements OnInit {\n\n  product:Product=new Product();\n  \n  constructor(private productService: ProductServiceService,private route: ActivatedRoute, private cartService:CartService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      () =>{\n    this.getProductById(); \n  }\n    );\n  }\n\naddToCart(){\n  const cartItem=new CartItem(this.product);\n\n  this.cartService.addToCart(cartItem);\n}\n\n  getProductById() {\n    const theId=+this.route.snapshot.paramMap.get('id');\n    this.productService.getProductByIdService(theId).subscribe(\n      data=>{\n        this.product=data;\n      }\n\n    )\n  }\n\n}\n","<div class=\"detail-section\">\n\n    <div class=\"container-fluid\">\n        \n            <img src=\"{{product.imageUrl}}\"  class=\"detail-img\" >\n            <h1 >{{product.name}}</h1>\n            <div class=\"price\">{{product.unitPrice | currency:'USD'}}</div>\n            <button (click)=\"addToCart()\" class=\"btn btn-outline-primary btn-sm\">Add to cart</button>\n            <hr>\n        <h3>Description</h3>\n        <p>{{product.description}}</p>\n        \n        \n        <a routerLink='/products' class=\"mt-5\">Back to Product List</a>\n        \n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductServiceService } from 'src/app/service/product-service.service';\nimport { ProductCategory } from 'src/app/common/product-category';\n\n@Component({\n  selector: 'app-product-list-menu',\n  templateUrl: './product-list-menu.component.html',\n  styleUrls: ['./product-list-menu.component.css']\n})\nexport class ProductListMenuComponent implements OnInit {\n\n   productCategory:ProductCategory[];\n\n  constructor(private productService: ProductServiceService) { }\n\n  ngOnInit(): void {\n    this.listOfProductListCategories();\n  }\n\n\n  listOfProductListCategories() {\n    this.productService.getProducCategoryList().subscribe(\n      data => {\n        console.log(\"The incomming data\"+ JSON.stringify(data));\n        this.productCategory=data;\n\n      }\n\n    );\n  }\n\n}\n","<div class=\"menu-sidebar-content js-scrollbar1\">\n    <nav class=\"navbar-sidebar\">\n        <ul class=\"list-unstyled navbar-list\">\n            <li *ngFor='let tempCategory of productCategory'>\n                <a routerLink='/category/{{tempCategory.id}}/{{tempCategory.categoryName}}' routerActiveLink='active-link'>{{tempCategory.categoryName}}</a>\n            </li>\n            \n          \n        </ul>\n    </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductServiceService } from 'src/app/service/product-service.service';\nimport { Product } from 'src/app/common/product';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { CartService } from 'src/app/service/cart.service';\n\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products:Product[]=[];\n  curretnCategoryId: number=1;\n  previousCategoryId:number=1;\n  curretnCategoryName: string;\n  searchMode:boolean=false;\n\n  //for pagination\n  thePageNumber:number=1;\n  thePageSize:number=5;\n  theTotalElements: number=0;\n  maxSize:number=3;\n  boundaryLinks:boolean=true;\n  \n  // pagination search\n  thePreviousKeyword:string=null;\n\n\n  \n\n  constructor(private productService: ProductServiceService, private cartService:CartService,\n    private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      () =>{\n    this.listProducts(); \n  }\n    );\n\n    \n  }\n\n  // pageSize dropdown listhez, html oldalrol bejövő adatot állítja be az itteni size változóra\n  // visszarakja az elso oldara es ujra lefuttatja a listazast\n  updatePageSize(thePageSize:number){\n    this.thePageSize=thePageSize;\n    this.thePageNumber=1;\n    this.listProducts();\n  \n}\n\n\n  listProducts(){\n\n    const searchMode=this.route.snapshot.paramMap.has('keyword');\n    if(searchMode){\n     \n      this.listProductsBySearch();\n    }\n    else{\n    this.listProductsByCategory();\n  }\n  }\n\n\n\n\n  listProductsBySearch(){\n    const theKeyword:string=this.route.snapshot.paramMap.get('keyword');\n\n    if(this.thePreviousKeyword != theKeyword){\n      this.thePageNumber=1;\n    }\n    this.thePreviousKeyword=theKeyword;\n\nthis.productService.getSearchProduct(this.thePageNumber-1,this.thePageSize,theKeyword).subscribe(\n  this.processResultWithPagination()\n);\n  }\n\n\n\n\n  listProductsByCategory(){\n    const hasId: boolean= this.route.snapshot.paramMap.has('id');\n\n\n    // check if the id is empty or not\n    if(hasId){\n      // if not empty than we make the id equal with our variable, \n      // using the + symbol to convert the String from gthe get method into a number\n    this.curretnCategoryId= +this.route.snapshot.paramMap.get('id');\n\n    this.curretnCategoryName= this.route.snapshot.paramMap.get('name');\n  }\n  else{\n    // if it is empty then we set it to 1 by default\n    this.curretnCategoryId=1;\n\n    this.curretnCategoryName='Books';\n  }\n\n  // if we have different category id than previous\n  // then set thePasgeNumber to 1\n  if(this.previousCategoryId != this.curretnCategoryId){\n    this.thePageNumber=1;\n  }\n\n  this.previousCategoryId=this.curretnCategoryId;\n\n  console.log(`the previous category id: ${this.previousCategoryId} and the current: ${this.curretnCategoryId}`);\n\n\n\n    this.productService.getProductListPaginate(this.thePageNumber-1,this.thePageSize,this.curretnCategoryId).subscribe(\n      this.processResultWithPagination()\n    );\n  }\n  processResultWithPagination()  {\n    return data => {\n      this.products=data._embedded.products;\n      this.thePageNumber=data.page.number + 1;\n      this.thePageSize=data.page.size;\n      this.theTotalElements=data.page.totalElements;\n\n\n\n    };\n  }\n\n\n  addToCart(tempProduct:Product){\n\n    console.log(`name: ${tempProduct.name} price: ${tempProduct.unitPrice}`);\n\n    const theCartItem=new CartItem(tempProduct);\n\n    this.cartService.addToCart(theCartItem);\n\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <h2 class=\"font-weight-bold\">{{curretnCategoryName}}</h2>\n        <hr>\n\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n\n                <div *ngFor=\"let tempProduct of products\" class=\"col-md-3\">\n                    <div class=\"product-box\">\n                        <a routerLink='/products/{{tempProduct.id}}' routerActiveLink='active-link'>\n                         <img src=\"{{tempProduct.imageUrl}}\" class=\"img-responsive\" > \n                        </a> <br>\n                         <a  routerLink='/products/{{tempProduct.id}}'>\n                            <h1>{{tempProduct.name}}</h1>\n                        </a>\n                        <div class=\"price\">{{tempProduct.unitPrice | currency:'USD'}}</div>\n                        <button (click)=\"addToCart(tempProduct)\" class=\"btn btn-outline-primary btn-sm\">Add to cart</button>\n                    </div>\n                </div>\n\n                <div *ngIf=\"products?.length == 0\" class=\"alert alert-warning col-md-12 d-flex justify-content-center\" role=\"alert\">\n                    <h3 >No product found.</h3>\n                </div>\n\n            </div>\n\n            <!-- pagination components-->\n<div class=\"footer-pagination\">\n<div class=\"row\">\n<div class=\"col-md-6\"></div>\n\n<div class=\"col-md-6\">\n<div class=\"row\">\n    <div class=\"col-md-9\" style=\"padding-left: 30%;\">\n        \n        <ngb-pagination [(page)] =\"thePageNumber\"\n                        [pageSize]=\"thePageSize\"\n                        [collectionSize]=\"theTotalElements\"\n                        [maxSize]=\"maxSize\"\n                        [boundaryLinks]=\"boundaryLinks\"\n                        (pageChange)= \"listProducts()\"\n                        >\n\n\n        </ngb-pagination>\n    \n    </div>\n\n    <!-- page size selection-->\n    <div class=\"col-md-3 mt-2\" style=\"text-align: right;\">\n        <span class=\"mr-2\">Page Size</span>\n        <select (change)=\"updatePageSize($event.target.value)\">\n            <option selected=\"true\">5</option>\n            <option>10</option>\n            <option>20</option>\n            <option>30</option>\n            <option>40</option>\n            <option>50</option>\n        </select>\n\n    </div>\n\n\n</div>\n</div>\n</div>\n</div>\n\n        </div>\n    </div>\n</div>    ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-search-list',\n  templateUrl: './search-list.component.html',\n  styleUrls: ['./search-list.component.css']\n})\nexport class SearchListComponent implements OnInit {\n\n  \n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  searchForProduct(value:string){\n  this.router.navigateByUrl(`/search/${value}`);\n\n  }\n\n}\n","<div class=\"form-header\">\n\n    <input #myInput class=\"au-input au-input-xl\" type=\"text\"\n        placeholder=\"Search for product ...\" (keyup.enter)=\"searchForProduct(myInput.value)\" />\n\n    <button class=\"au-btn-submit\" (click)=\"searchForProduct(myInput.value)\">\n        Search\n    </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CartItem } from '../common/cart-item';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  \n\n  CartItems: CartItem[]=[];\n\n  totalPrice: Subject<number>=new Subject<number>();\n  totalQuantity: Subject<number>=new Subject<number>();\n\n  constructor() {\n\n\n   }\n\n   addToCart(theCartItem:CartItem){\n\n   let alreadyExist: boolean=false;\n   let existingCartItem: CartItem=undefined;\n\n    if(this.CartItems.length>0){\n/*\n      for (let tempItem of this.CartItems) {\n        if(tempItem.id==theCartItem.id){\n          existingCartItem=tempItem;\n          break;\n        }\n      }\n*/\n// goes over the array from the first element, if it matches with the specific id then it stops\nexistingCartItem=this.CartItems.find(tempCartItem => tempCartItem.id==theCartItem.id);\n\n      alreadyExist=(existingCartItem != undefined);\n    }\n      if(alreadyExist){\n        existingCartItem.quantity++;\n      }\n      else{\n        this.CartItems.push(theCartItem);\n      }\n\n        this.computeCartTotalts();\n    \n\n\n   }\n  computeCartTotalts() {\n    let totalPriceValue: number=0;\n    let totalQuantityValue:number=0;\n    for (const currentItem of this.CartItems) {\n      totalPriceValue += currentItem.unitPrice* currentItem.quantity;\n      totalQuantityValue += currentItem.quantity;\n      \n    }\n\n    this.totalPrice.next(totalPriceValue);\n    this.totalQuantity.next(totalQuantityValue);\n\n    this.logCartData(totalPriceValue,totalQuantityValue);\n  }\n\n\n  logCartData(totalPriceValue: number, totalQuantityValue: number) {\n    console.log(\"Cart Content\");\n    for (const tempItem of this.CartItems) {\n      const subTotal=tempItem.quantity*tempItem.unitPrice;\n      console.log(`Name: ${tempItem.name} Price: ${tempItem.unitPrice} Quantity: ${tempItem.quantity} subtotal: ${tempItem.unitPrice * tempItem.quantity}`\n      +` subtotal${subTotal}`);\n    }\n    console.log(`totalPrice: ${totalPriceValue.toFixed(2)}, totalQuantity: ${totalQuantityValue}`);\n    console.log('----');\n\n  }\n\n  remove(cartItem: CartItem) {\n    const theCartIndex= this.CartItems.findIndex(\n      tempCartItem => tempCartItem.id==cartItem.id\n    );\n\n    if(theCartIndex > -1){\n      this.CartItems.splice(theCartIndex,1);\n\n      this.computeCartTotalts();\n    }\n  }\n\n  decrementQuantity(cartItem: CartItem) {\n    cartItem.quantity--;\n\n    if(cartItem.quantity==0){\n      this.remove(cartItem);\n    }else{\n      this.computeCartTotalts();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Country } from '../common/country';\nimport { map } from 'rxjs/operators';\nimport { State } from '../common/state';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n\n\n  private baseurlForCountries='http://localhost:8080/api/countries';\n  private baseurlForstates='http://localhost:8080/api/states';\n\n  constructor(private httpClient: HttpClient) {\n\n   }\n\n\n\n\n   getStatesByCountryCode(code: string) {\n    const urlForStatesFindByCountryCode=`${this.baseurlForstates}/search/findByCountryCode?code=${code}`;\n    return  this.httpClient.get<GetResponseStates>(urlForStatesFindByCountryCode).pipe(\n      map(response => response._embedded.states)\n    );\n  }\n\n   getCountryList():Observable<Country[]> {\n    return  this.httpClient.get<GetResponseCountries>(this.baseurlForCountries).pipe(\n      map(response => response._embedded.countries)\n    );\n  }\n\ngetMonthsForCreditCard(startMonth : number): Observable<number[]> {\n\n  let data: number []=[];\n\nfor (let theMonth= startMonth; theMonth<=12; theMonth++) {\n  data.push(theMonth);\n  \n}\n\n  return of(data);\n\n}\n\n\ngetYearForCreditCard(): Observable<number[]> {\n\n  let data: number []=[];\n\n  const startYear: number=new Date().getFullYear();\n  const endYear: number= startYear+10;\n\nfor (let theYear = startYear; theYear<=endYear; theYear++) {\n  data.push(theYear);\n  \n}\n\n  return of(data);\n\n}\n\n\n}\n\ninterface GetResponseCountries{\n  _embedded:{\n    countries: Country[];\n  }\n  \n  }\n\n  \ninterface GetResponseStates{\n  _embedded:{\n    states: State[];\n  }\n  \n  }","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport{Product} from '../common/product';\nimport{map} from 'rxjs/operators';\nimport { ProductCategory } from '../common/product-category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\n\n \n  private categorySearchUrl='http://localhost:8080/api/product-category';\n\n  //  private baseurl='http://localhost:8080/api/products?size=100';\n  private baseurl='http://localhost:8080/api/products';\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  getProductListPaginate(thePage:number,thePageSize:number ,currentCategoryId: number):Observable<GetResponseProducts>{\n\n    // we have to make that URL access on the backend side\n    const searchUrl=`${this.baseurl}/search/findByCategoryId?id=${currentCategoryId}`\n    + `&page=${thePage}&size=${thePageSize}`;\n\n    return  this.httpClient.get<GetResponseProducts>(searchUrl);\n  }  \n\n\n  getProductList(currentCategoryId: number):Observable<Product[]>{\n\n    // we have to make that URL access on the backend side\n    const searchUrl=`${this.baseurl}/search/findByCategoryId?id=${currentCategoryId}`;\n\n    return  this.httpClient.get<GetResponseProducts>(searchUrl).pipe(\n      map(response => response._embedded.products)\n    );\n  }  \n\n\n  getProducCategoryList():Observable<ProductCategory[]> {\n    return  this.httpClient.get<GetResponseProductCategory>(this.categorySearchUrl).pipe(\n      map(response => response._embedded.productCategory)\n    );\n  }\n\n  getSearchProduct(thePage:number,thePageSize:number,theKeyword:string):Observable<GetResponseProducts> {\n    const searchedUrl=`${this.baseurl}/search/findByNameContaining?name=${theKeyword}`\n      +`&page=${thePage}&size=${thePageSize}`;\n\n    return  this.httpClient.get<GetResponseProducts>(searchedUrl);\n  }\n\n  getProductByIdService(theId: number):Observable<Product> {\n    const detailedUrl=`${this.baseurl}/${theId}`;\n    return  this.httpClient.get<Product>(detailedUrl);\n  }\n\n\n}\n\ninterface GetResponseProducts{\n  _embedded:{\n    products:Product[];\n  },\n  page:{\n    size:number,\n    totalElements:number,\n    totalPages:number,\n    number:number\n  }\n}\n\ninterface GetResponseProductCategory{\n  _embedded:{\n    productCategory:ProductCategory[];\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}